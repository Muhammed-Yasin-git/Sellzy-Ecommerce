<!-- include footer -->
<%- include('include/_adminbase.ejs') %>
<!-- /include footer -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">

	<!-- CONTENT -->
	<section id="content" style="background-color: #eee; overflow: hidden;">

		<!-- NAVBAR -->
		
		<!-- NAVBAR -->

		<!-- MAIN -->
		<main>
			
			<div class="head-title "  >
				<div class="left">
					<h1>Dashboard</h1>
					<ul class="breadcrumb">
						<li>
							<a href="#" style="all: unset;">Dashboard</a>

						</li>
						<li><i class='bx bx-chevron-right' ></i></li>
						<li>
							<a class="active" href="#">Home</a>
						</li>
					</ul>
				</div>
				<a href="#" class="btn-download" data-bs-toggle="modal" data-bs-target="#exampleModal">
					<i class='bx bxs-cloud-download'></i>
					<span class="text">Download Sales Report</span>
				</a>
				
				
			</div>

			<ul class="box-info">
				<a style="all: unset;" href="admin-order"><li >
					<i class='bx bxs-calendar-check' ></i>
					<span class="text">
						<h3><%= totalOrder %></h3>
						<p>Total Orders</p>
					</span>
				</li></a>
				<a style="all: unset;" href="admin-users"><li>
					<i class='bx bxs-group' ></i>
					<span class="text">
						<h3><%=amountOfUsers%></h3>
						<p>Total Users</p>
					</span>
				</li></a>
				<li>
					<i class='bx bxs-dollar-circle' ></i>
					<span class="text">
						<h3>₹<%=totalSalesAmount.toLocaleString('en-IN')%></h3>

						<p>Total Sales</p>
					</span>
				</li>
			</ul>

			<div class="form-group">
				<label for="timeInterval">Select Time Interval:</label>
				<select class="form-control" style="width: 150px;" id="timeInterval">
				  <option value="Yearly">Yearly</option>
				  <option value="Monthly"  selected>Monthly</option>
				  <option value="Weekly">Weekly</option>
				  <option value="Daily">Daily</option>
				</select>
			  </div>
   
  
		<canvas id="ordersChart" width="1300" height="600"></canvas>
  
			<div>
			
			</section>

		</main>
		<!-- MAIN -->
		<style>
			main {
			  overflow: hidden;
			}
		  </style>
		  
	</section>
	<!-- CONTENT -->
	
	  <form id="downloadSalesReportPDFOrExcel" action="/sales-report" method="post">
		<div
		  class="modal fade"
		  id="exampleModal"
		  tabindex="-1"
		  aria-labelledby="exampleModalLabel"
		  aria-hidden="true"
		>
		  <div class="modal-dialog modal-dialog-centered">
			<div class="modal-content">
			  <div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">PDF or Excel</h5>
				<button
				  type="button"
				  class="btn-close"
				  data-bs-dismiss="modal"
				  aria-label="Close"
				></button>
			  </div>
			  <div class="modal-body">
				<div class="d-flex">
				  <div class="form-check w-50 showErr">
					<input value="pdf" class="form-check-input formVal" type="radio" name="type" id="flexRadioDefault1">
					<label class="form-check-label" for="type">
					  PDF
					</label>
					<p class="err"></p>
				  </div>
				  <div class="form-check w-50 showErr">
					<input value="excel" class="form-check-input formVal" type="radio" name="type" id="flexRadioDefault2">
					<label class="form-check-label" for="type">
					  Excel
					</label>
				  </div>
				</div>
				
				<div class="d-flex">
				  <div class="w-50 showErr">
					<label class="d-block mb-2 mt-2" for="fromDate">From Date</label>
					<input class="formVal" type="date" name="fromDate">
					<p class="err"></p>
				  </div>
				  <div class="w-50 showErr">
					<label class="d-block mb-2 mt-2" for="toDate">To Date</label>
					<input class="formVal" type="date" name="toDate">
					<p class="err"></p>
				  </div>
				</div>
			  </div>
			  <div class="modal-footer">
				<button
				  type="button"
				  class="btn btn-secondary"
				  data-bs-dismiss="modal"
				>
				  Close
				</button>
				<button type="submit" class="btn btn-primary">
				  Download Now
				</button>
			  </div>
			</div>
		  </div>
		</div>
	  </form>
	  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ratOyhjQIINk+CD2EAgjlEqUC5FFtui9cU4J+sk9BbcE3DE3ZcdVo6YQZ5y4bSSUn"
        crossorigin="anonymous"></script>

  
	  
	  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-ratOyhjQIINk+CD2EAgjlEqUC5FFtui9cU4J+sk9BbcE3DE3ZcdVo6YQZ5y4bSSUn"
		crossorigin="anonymous"></script>
	
	  <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js"
		integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=" crossorigin="anonymous"></script>
	  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.0/jquery.waypoints.min.js"></script>
	  <script src="https://cdn.jsdelivr.net/npm/jquery.counterup@2.1.0/jquery.counterup.min.js"></script>
	  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
	  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
	  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
		integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
		crossorigin="anonymous"></script>
	  <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js"
		integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=" crossorigin="anonymous"></script>
	  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
	  <script src="https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.0/jquery.waypoints.min.js"></script>
	  <script src="https://cdn.jsdelivr.net/npm/jquery.counterup@2.1.0/jquery.counterup.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<style>
.error-message {
	color: red;
  }

</style>
  


<script>
    try {
  const checkBox = document.querySelector('.checkBox');
  const formVal = document.querySelectorAll(".formVal");
  const errP = document.querySelectorAll(".err");
  const showErr = document.querySelectorAll(".showErr");

  checkBox?.addEventListener('change', () => {
    errP[1].innerHTML = "";
    errP[2].innerHTML = "";
    showErr[2].classList.remove("errDiv");
    showErr[3].classList.remove("errDiv");
    if(checkBox.checked){
      formVal[2].value = '';
      formVal[3].value = '';
    }
  });
  formVal?.forEach((element, i) => {
    element?.addEventListener("change", (e) => {
      if (i === 0 || i === 1) {
        errP[0].innerHTML = ``;
        showErr[i === 0 ? 1 : 0].classList.remove("errDiv");
      } else {
        checkBox.checked = false;
        errP[i - 1].innerHTML = "";
      }
      showErr[i].classList.remove("errDiv");
    });
  });
  const form = document.getElementById("downloadSalesReportPDFOrExcel");
  form.addEventListener("submit", (e) => {
    const data = {};
    $("#downloadSalesReportPDFOrExcel")
      .serializeArray()
      .forEach((val) => {
        data[`${val.name}`] = val.value?.trim();
      });

    let err = false;

	if (!data?.type) {
  showErr[0].classList.add("errDiv");
  showErr[1].classList.add("errDiv");
  errP[0].innerHTML = "<span class='error-message'>This field is required</span>";
  err = true;
}

if (!data?.full && !data?.fromDate) {
  showErr[2].classList.add("errDiv");
  errP[1].innerHTML = "<span class='error-message'>This field is required</span>";
  err = true;
}

if (!data?.full && !data?.toDate) {
  showErr[3].classList.add("errDiv");
  errP[2].innerHTML = "<span class='error-message'>This field is required</span>";
  err = true;
}

if (!data?.full && data?.toDate && data?.fromDate && data.toDate < data.fromDate) {
  showErr[2].classList.add("errDiv");
  showErr[3].classList.add("errDiv");
  errP[1].innerHTML =
    "<span class='error-message'>From date needs to be less than or equal to the to date</span>";
  err = true;
}

if (!data?.full && data?.toDate && new Date(data.toDate) > new Date()) {
  showErr[3].classList.add("errDiv");
  errP[2].innerHTML = `<span class='error-message'>Today is ${new Date().toISOString().split('T')[0].split('-').reverse().join('-')} choose a date less than or equal to this</span>`;
  err = true;
}

if (!data?.full && data?.fromDate && new Date(data.fromDate) > new Date()) {
  showErr[2].classList.add("errDiv");
  errP[1].innerHTML = `<span class='error-message'>Today is ${new Date().toISOString().split('T')[0].split('-').reverse().join('-')} choose a date less than or equal</span>`;
  err = true;
}


    if (err) {
      e.preventDefault();
    }
  });
} catch (err) {
  console.error('sales report err',err);
}


</script>


<script>
	window.addEventListener("load", () => {
		// Variable to store the chart instance
		let ordersChart;

		// Function to fetch and update chart data
		const updateChartData = (filter) => {
			$.ajax({
				url: '/api/getDetailsChart',
				method: 'POST',
				data: { filter },
				success: function (data) {
					console.log(data);

					var orderData = {
						labels: data.label,
						datasets: [{
							label: 'Number of Orders',
							data: data.salesCount,
							borderColor: 'rgba(75, 192, 192, 1)',
							backgroundColor: 'rgba(75, 192, 192, 0.5)',
							borderWidth: 2,
							fill: false
						}]
					};

					var ctx = document.getElementById('ordersChart').getContext('2d');

					// Destroy the previous chart instance (if it exists)
					if (ordersChart) {
						ordersChart.destroy();
					}

					ordersChart = new Chart(ctx, {
						type: 'bar',
						data: orderData,
						options: {
							scales: {
								xAxes: [{
									type: 'category',
									labels: orderData.labels
								}],
								yAxes: [{
									beginAtZero: true,
									scaleLabel: {
										display: true,
										labelString: 'Number of Orders'
									}
								}]
							}
						}
					});
				},
				error: function (xhr, status, error) {
					console.error('Error fetching chart data:', error);
				}
			});
		};

		// Initial data load (assuming 'monthly' as default)
		updateChartData('Monthly');

		// Event listener for the select button (dropdown)
		let timeInterval = document.getElementById("timeInterval");
		timeInterval.addEventListener("change", () => {
			// Fetch and update data when the dropdown changes
			updateChartData(timeInterval.value);
		});
	});
</script>



	
</body>
</html>